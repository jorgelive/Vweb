security:
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    #acl:
    #    connection: default
               
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
#        # for convenience, I decided to gather Sonata roles here
#        ROLE_SONATA_FOO_READER:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_LIST
#            - ROLE_SONATA_ADMIN_DEMO_FOO_VIEW
#        ROLE_SONATA_FOO_EDITOR:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_CREATE
#            - ROLE_SONATA_ADMIN_DEMO_FOO_EDIT
#        ROLE_SONATA_FOO_ADMIN:
#            - ROLE_SONATA_ADMIN_DEMO_FOO_DELETE
#            - ROLE_SONATA_ADMIN_DEMO_FOO_EXPORT
        # those are the roles I will use (less verbose)
        ROLE_STAFF:                     [ROLE_SONATA_ADMIN]
        ROLE_ADMINISTRACION_USUARIO:    [ROLE_STAFF]
        ROLE_OPERACIONES_USUARIO:       [ROLE_STAFF]
        ROLE_ADMINISTRACION_SUPERVISOR: [ROLE_ADMINISTRACION_USUARIO]
        ROLE_OPERACIONES_SUPERVISOR:    [ROLE_OPERACIONES_USUARIO]
        ROLE_ADMINISTRACION_JEFE:       [ROLE_ADMINISTRACION_SUPERVISOR]
        ROLE_OPERACIONES_JEFE:          [ROLE_OPERACIONES_SUPERVISOR]
        ROLE_ADMIN:                     [ROLE_STAFF, ROLE_ADMINISTRACION_JEFE, ROLE_OPERACIONES_JEFE]
        ROLE_SUPER_ADMIN:               [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:                         [ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT]


    # set access_strategy to unanimous, else you may have unexpected behaviors
    access_decision_manager:
        strategy: unanimous

    firewalls:

        # -> custom firewall for the admin area of the URL
        main:
            pattern:            .*
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
            logout:
                path:           /admin/logout
                target:         /
            anonymous: true

    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # AsseticBundle paths used when using the controller for assets
        - { path: ^/js/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/css/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/new$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/check-confirmation-email$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/confirm/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/confirmed$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/request-reset-password$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/send-resetting-email$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/check-resetting-email$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/reset-password/, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, role: ROLE_STAFF }
        - { path: ^/dbproceso/carga, role: ROLE_ADMIN }
        - { path: ^/dbproceso/docsaptipo, role: ROLE_ADMINISTRACION_SUPERVISOR }
        - { path: ^/dbproceso/doccptipo, role: ROLE_ADMINISTRACION_SUPERVISOR }
        - { path: ^/dbproceso/, role: ROLE_STAFF }

        #- { path: ^/proveedor/informacion/, ROLE_ADMIN } en annotaciones
        #- { path: ^/reporte/sentencia/, ROLE_ADMIN } en annotaciones

        - { path: ^/reporte/campo, role: ROLE_ADMIN }
        - { path: ^/reporte/tipo, role: ROLE_ADMIN }
        - { path: ^/reporte/operador, role: ROLE_ADMIN }

        - { path: ^/inventario/caracteristica, role: ROLE_ADMIN }
        - { path: ^/inventario/componentecaracteristica, role: ROLE_ADMIN }
        - { path: ^/inventario/componente, role: ROLE_ADMIN }
        - { path: ^/inventario/componenteestado, role: ROLE_ADMIN }
        - { path: ^/inventario/componentetipo, role: ROLE_ADMIN }
        - { path: ^/inventario/item, role: ROLE_ADMIN }
        - { path: ^/inventario/itemtipo, role: ROLE_ADMIN }
        - { path: ^/inventario/servicio, role: ROLE_ADMIN }
        - { path: ^/inventario/servicioestado, role: ROLE_ADMIN }
        - { path: ^/inventario/serviciotipo, role: ROLE_ADMIN }

        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

        
parameters:
    # ... other parameters
    #security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    # optionally use a custom MaskBuilder
    #sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder
